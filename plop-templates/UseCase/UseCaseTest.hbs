import { {{ pascalCase name }} } from "@/domain/entities/{{ pascalCase name }}";
import { I{{ pascalCase name }}Repository } from "@/domain/repositories/{{ pascalCase name }}Repository";
import { {{ pascalCase name }}UseCase } from "@/application/usecases/{{ pascalCase name }}UseCase/{{ pascalCase name }}UseCase";
import { AppError } from "@/infrastructure/errors/AppError";

// import { {{ camelCase name }}Seeds } from "@tests/resources/{{ pascalCase name }}/{{ pascalCase name }}Seeds";
// import { parent{{ pascalCase name }}, child{{ pascalCase name }}1, child{{ pascalCase name }}2 } from "@tests/resources/{{ pascalCase name }}/{{ pascalCase name }}Entitys";

describe("{{ pascalCase name }}UseCase", () => {
  let {{ camelCase name }}Repository: jest.Mocked<I{{ pascalCase name }}Repository>;
  let {{ camelCase name }}UseCase: {{ pascalCase name }}UseCase;

  beforeEach(() => {
    {{ camelCase name }}Repository = {
      findById: jest.fn(),
      save: jest.fn(),
      delete: jest.fn(),
    } as unknown as jest.Mocked<I{{ pascalCase name }}Repository>;

    {{ camelCase name }}UseCase = new {{ pascalCase name }}UseCase({{ camelCase name }}Repository);
  });

  describe("get{{ pascalCase name }}ById", () => {});
  describe("create{{ pascalCase name }}", () => {});
  describe("update{{ pascalCase name }}", () => {});
  describe("delete{{ pascalCase name }}", () => {});
});
